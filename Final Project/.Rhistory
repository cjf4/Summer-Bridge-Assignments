bsals <- cbind(lapply(bsals[1:6], as.character), bsals[7], stringsAsFactors = FALSE)
#prepare the numeric data to be converted via regex removal of non digits
#change this to a loop or lapply
bsals$'BASE SALARY' <- as.numeric(gsub("[^[:digit:]]", "", bsals$'BASE SALARY'))
bsals$'SIGN BONUS' <- as.numeric(gsub("[^[:digit:]]", "", bsals$'SIGN BONUS'))
bsals$'ALL BONUSES' <- as.numeric(gsub("[^[:digit:]]", "", bsals$'ALL BONUSES'))
bsals$'CAP VALUE' <- as.numeric(gsub("[^[:digit:]]", "", bsals$'CAP VALUE'))
bsals$'SALARY' <- as.numeric(gsub("[^[:digit:]]", "", bsals$'SALARY'))
str(bsals)
#next steps
#loop through url to download all teams/seasons
#set up database
#connect to it
#dump data into DB
download_data(nfl_teams[1], years[1])
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
download_data(nfl_teams[1], years[1])
salary_data <- data.frame()
str(salary_data)
salary_data <- rbind(bsals)
str(salary_data)
?rbind
salary_data <- data.frame()
salary_data <- rbind( salary_data, bsals)
str(salary_data)
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
download_data(nfl_teams[1],years[1])
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
download_data(nfl_teams[1],years[1])
str(salary_data)
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
str(salary_data)
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
download_data(nfl_teams[1], years[1])
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
download_data(nfl_teams[1], years[1])
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
download_data(nfl_teams[1], years[1])
str(salary_data)
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
download_data(nfl_teams[1], years[1])
str(salary_data)
salary_data
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
download_data(nfl_teams[1], years[1])
str(salary_data)
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
str(salary_data)
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
download_data(nfl_teams[1], years[1], salary_data)
salary_data <- download_data(nfl_teams[1], years[1], salary_data)
str(salary_data)
salary_data <- download_data(nfl_teams[1], years[2], salary_data)
str(salary_data)
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
library(XML)
library(stringr)
nfl_teams <- c("bills", "dolphins", "jets", "patriots",
"browns", "steelers", "bengals", "ravens",
"colts", "jaguars", "texans", "titans",
"chargers", "chiefs", "raiders", "broncos",
"eagles", "giants", "redskins", "cowboys",
"packers", "lions", "bears", "vikings",
"falcons", "panthers", "saints", "buccaneers",
"rams", "seahawks", "49ers", "cardinals")
years <- c( "2001", "2002", "2003", "2004", "2005",
"2006", "2007", "2008", "2009-10")
salary_data <- data.frame()
download_data <- function(team, year, df) {
team_list <- readHTMLTable(sprintf('http://content.usatoday.com/sportsdata/football/nfl/%s/salaries/%s', team, year))
team_sals <- team_list[['team-salaries']]
team_sals <- cbind(lapply(team_sals[1:6], as.character),
team_sals[7], stringsAsFactors = FALSE)
team_sals$'BASE SALARY' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'BASE SALARY'))
team_sals$'SIGN BONUS' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'SIGN BONUS'))
team_sals$'ALL BONUSES' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'ALL BONUSES'))
team_sals$'CAP VALUE' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'CAP VALUE'))
team_sals$'SALARY' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'SALARY'))
return(rbind(df, team_sals))
}
#getting error, put try catch on rbind right above
for (i in nfl_teams) {
for ( j in years) {
salary_data <- download_data(nfl_teams[i], years[j], salary_data)
}
}
#data is in a table, and labelled as a list element
giants <- readHTMLTable('http://content.usatoday.com/sportsdata/football/nfl/Giants/salaries/2009-10')
#double bracket to access the first element of the list directly
bsals <- giants[['team-salaries']]
#turn the first 6 col vectors into character vectors, leave the 7th as a factor
#glue them back together
bsals <- cbind(lapply(bsals[1:6], as.character), bsals[7], stringsAsFactors = FALSE)
#prepare the numeric data to be converted via regex removal of non digits
#change this to a loop or lapply
bsals$'BASE SALARY' <- as.numeric(gsub("[^[:digit:]]", "", bsals$'BASE SALARY'))
bsals$'SIGN BONUS' <- as.numeric(gsub("[^[:digit:]]", "", bsals$'SIGN BONUS'))
bsals$'ALL BONUSES' <- as.numeric(gsub("[^[:digit:]]", "", bsals$'ALL BONUSES'))
bsals$'CAP VALUE' <- as.numeric(gsub("[^[:digit:]]", "", bsals$'CAP VALUE'))
bsals$'SALARY' <- as.numeric(gsub("[^[:digit:]]", "", bsals$'SALARY'))
str(bsals)
#next steps
#loop through url to download all teams/seasons
#set up database
#connect to it
#dump data into DB
library(XML)
library(stringr)
nfl_teams <- c("bills", "dolphins", "jets", "patriots",
"browns", "steelers", "bengals", "ravens",
"colts", "jaguars", "texans", "titans",
"chargers", "chiefs", "raiders", "broncos",
"eagles", "giants", "redskins", "cowboys",
"packers", "lions", "bears", "vikings",
"falcons", "panthers", "saints", "buccaneers",
"rams", "seahawks", "49ers", "cardinals")
years <- c( "2001", "2002", "2003", "2004", "2005",
"2006", "2007", "2008", "2009-10")
salary_data <- data.frame()
download_data <- function(team, year, df) {
team_list <- readHTMLTable(sprintf('http://content.usatoday.com/sportsdata/football/nfl/%s/salaries/%s', team, year))
team_sals <- team_list[['team-salaries']]
team_sals <- cbind(lapply(team_sals[1:6], as.character),
team_sals[7], stringsAsFactors = FALSE)
team_sals$'BASE SALARY' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'BASE SALARY'))
team_sals$'SIGN BONUS' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'SIGN BONUS'))
team_sals$'ALL BONUSES' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'ALL BONUSES'))
team_sals$'CAP VALUE' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'CAP VALUE'))
team_sals$'SALARY' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'SALARY'))
return(rbind(df, team_sals))
}
#getting error, put try catch on rbind right above
for (i in nfl_teams) {
for ( j in years) {
salary_data <- download_data(nfl_teams[i], years[j], salary_data)
}
}
#data is in a table, and labelled as a list element
giants <- readHTMLTable('http://content.usatoday.com/sportsdata/football/nfl/Giants/salaries/2009-10')
#double bracket to access the first element of the list directly
bsals <- giants[['team-salaries']]
#turn the first 6 col vectors into character vectors, leave the 7th as a factor
#glue them back together
bsals <- cbind(lapply(bsals[1:6], as.character), bsals[7], stringsAsFactors = FALSE)
#prepare the numeric data to be converted via regex removal of non digits
#change this to a loop or lapply
bsals$'BASE SALARY' <- as.numeric(gsub("[^[:digit:]]", "", bsals$'BASE SALARY'))
bsals$'SIGN BONUS' <- as.numeric(gsub("[^[:digit:]]", "", bsals$'SIGN BONUS'))
bsals$'ALL BONUSES' <- as.numeric(gsub("[^[:digit:]]", "", bsals$'ALL BONUSES'))
bsals$'CAP VALUE' <- as.numeric(gsub("[^[:digit:]]", "", bsals$'CAP VALUE'))
bsals$'SALARY' <- as.numeric(gsub("[^[:digit:]]", "", bsals$'SALARY'))
str(bsals)
#next steps
#loop through url to download all teams/seasons
#set up database
#connect to it
#dump data into DB
debugSource('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
library(XML)
library(stringr)
nfl_teams <- c("bills", "dolphins", "jets", "patriots",
"browns", "steelers", "bengals", "ravens",
"colts", "jaguars", "texans", "titans",
"chargers", "chiefs", "raiders", "broncos",
"eagles", "giants", "redskins", "cowboys",
"packers", "lions", "bears", "vikings",
"falcons", "panthers", "saints", "buccaneers",
"rams", "seahawks", "49ers", "cardinals")
years <- c( "2001", "2002", "2003", "2004", "2005",
"2006", "2007", "2008", "2009-10")
salary_data <- data.frame()
download_data <- function(team, year, df) {
team_list <- readHTMLTable(sprintf('http://content.usatoday.com/sportsdata/football/nfl/%s/salaries/%s', team, year))
team_sals <- team_list[['team-salaries']]
team_sals <- cbind(lapply(team_sals[1:6], as.character),
team_sals[7], stringsAsFactors = FALSE)
team_sals$'BASE SALARY' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'BASE SALARY'))
team_sals$'SIGN BONUS' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'SIGN BONUS'))
team_sals$'ALL BONUSES' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'ALL BONUSES'))
team_sals$'CAP VALUE' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'CAP VALUE'))
team_sals$'SALARY' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'SALARY'))
return(rbind(df, team_sals))
}
#getting error, put try catch on rbind right above
for (i in nfl_teams) {
for ( j in years) {
salary_data <- download_data(nfl_teams[i], years[j], salary_data)
}
}
#data is in a table, and labelled as a list element
giants <- readHTMLTable('http://content.usatoday.com/sportsdata/football/nfl/Giants/salaries/2009-10')
#double bracket to access the first element of the list directly
bsals <- giants[['team-salaries']]
#turn the first 6 col vectors into character vectors, leave the 7th as a factor
#glue them back together
bsals <- cbind(lapply(bsals[1:6], as.character), bsals[7], stringsAsFactors = FALSE)
#prepare the numeric data to be converted via regex removal of non digits
#change this to a loop or lapply
bsals$'BASE SALARY' <- as.numeric(gsub("[^[:digit:]]", "", bsals$'BASE SALARY'))
bsals$'SIGN BONUS' <- as.numeric(gsub("[^[:digit:]]", "", bsals$'SIGN BONUS'))
bsals$'ALL BONUSES' <- as.numeric(gsub("[^[:digit:]]", "", bsals$'ALL BONUSES'))
bsals$'CAP VALUE' <- as.numeric(gsub("[^[:digit:]]", "", bsals$'CAP VALUE'))
bsals$'SALARY' <- as.numeric(gsub("[^[:digit:]]", "", bsals$'SALARY'))
str(bsals)
#next steps
#loop through url to download all teams/seasons
#set up database
#connect to it
#dump data into DB
library(XML)
library(stringr)
nfl_teams <- c("bills", "dolphins", "jets", "patriots",
"browns", "steelers", "bengals", "ravens",
"colts", "jaguars", "texans", "titans",
"chargers", "chiefs", "raiders", "broncos",
"eagles", "giants", "redskins", "cowboys",
"packers", "lions", "bears", "vikings",
"falcons", "panthers", "saints", "buccaneers",
"rams", "seahawks", "49ers", "cardinals")
years <- c( "2001", "2002", "2003", "2004", "2005",
"2006", "2007", "2008", "2009-10")
salary_data <- data.frame()
download_data <- function(team, year, df) {
team_list <- readHTMLTable(sprintf('http://content.usatoday.com/sportsdata/football/nfl/%s/salaries/%s', team, year))
team_sals <- team_list[['team-salaries']]
team_sals <- cbind(lapply(team_sals[1:6], as.character),
team_sals[7], stringsAsFactors = FALSE)
team_sals$'BASE SALARY' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'BASE SALARY'))
team_sals$'SIGN BONUS' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'SIGN BONUS'))
team_sals$'ALL BONUSES' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'ALL BONUSES'))
team_sals$'CAP VALUE' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'CAP VALUE'))
team_sals$'SALARY' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'SALARY'))
return(rbind(df, team_sals))
}
#getting error, put try catch on rbind right above
for (i in nfl_teams) {
for ( j in years) {
salary_data <- download_data(nfl_teams[i], years[j], salary_data)
}
}
#data is in a table, and labelled as a list element
giants <- readHTMLTable('http://content.usatoday.com/sportsdata/football/nfl/Giants/salaries/2009-10')
#double bracket to access the first element of the list directly
bsals <- giants[['team-salaries']]
#turn the first 6 col vectors into character vectors, leave the 7th as a factor
#glue them back together
bsals <- cbind(lapply(bsals[1:6], as.character), bsals[7], stringsAsFactors = FALSE)
#prepare the numeric data to be converted via regex removal of non digits
#change this to a loop or lapply
bsals$'BASE SALARY' <- as.numeric(gsub("[^[:digit:]]", "", bsals$'BASE SALARY'))
bsals$'SIGN BONUS' <- as.numeric(gsub("[^[:digit:]]", "", bsals$'SIGN BONUS'))
bsals$'ALL BONUSES' <- as.numeric(gsub("[^[:digit:]]", "", bsals$'ALL BONUSES'))
bsals$'CAP VALUE' <- as.numeric(gsub("[^[:digit:]]", "", bsals$'CAP VALUE'))
bsals$'SALARY' <- as.numeric(gsub("[^[:digit:]]", "", bsals$'SALARY'))
str(bsals)
#next steps
#loop through url to download all teams/seasons
#set up database
#connect to it
#dump data into DB
debugSource('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
rm(list=ls())
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
?data.frame
bill <- download_data("bills","2001",salary_data)
bill <- download_data("bills","2002",salary_data)
str(bill)
str(salary_data)
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
nfl_teams["bills"]
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
str(salary_data)
summary(salary_data)
?levels
levels(salary_data$POSITION)
library(XML)
library(XML)
nfl_teams <- c("bills", "dolphins", "jets", "patriots",
"browns", "steelers", "bengals", "ravens",
"colts", "jaguars", "texans", "titans",
"chargers", "chiefs", "raiders", "broncos",
"eagles", "giants", "redskins", "cowboys",
"packers", "lions", "bears", "vikings",
"falcons", "panthers", "saints", "buccaneers",
"rams", "seahawks", "49ers", "cardinals")
years <- c("2002", "2003", "2004", "2005",
"2006", "2007", "2008", "2009-10")
salary_data <- data.frame()
download_data <- function(team, year, df) {
team_list <- readHTMLTable(sprintf('http://content.usatoday.com/sportsdata/football/nfl/%s/salaries/%s', team, year))
team_sals <- team_list[['team-salaries']]
team_sals <- cbind(lapply(team_sals[1:6], as.character),
team_sals[7], stringsAsFactors = FALSE)
team_sals$'BASE SALARY' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'BASE SALARY'))
team_sals$'SIGN BONUS' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'SIGN BONUS'))
team_sals$'ALL BONUSES' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'ALL BONUSES'))
team_sals$'CAP VALUE' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'CAP VALUE'))
team_sals$'SALARY' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'SALARY'))
return(rbind(df, team_sals))
}
for (i in 1:32) {
for ( j in 1:8) {
salary_data <- download_data(nfl_teams[i], years[j], salary_data)
}
}
#next steps
#DONE loop through url to download all teams/seasons
#set up database
#connect to it
#dump data into DB
salary_data(str)
str(salary_data)
?colbind
?cbind
bills_sals <- data.frame()
bills_sals <- download_data("bills","2002",bills_sals)
str(bills_sals)
cbind(bill_sals, team = "bills")
cbind(bills_sals, team = "bills")
expand.grid(nfl_teams, years, stringsAsFactors = FALSE)
team_years <- expand.grid(nfl_teams, years, stringsAsFactors = FALSE)
team_yeas[1,]
team_years[1,]
download_data <- function(team, year, df) {
team_list <- readHTMLTable(sprintf('http://content.usatoday.com/sportsdata/football/nfl/%s/salaries/%s', team, year))
team_sals <- team_list[['team-salaries']]
team_sals <- cbind(lapply(team_sals[1:6], as.character),
team_sals[7], stringsAsFactors = FALSE)
team_sals$'BASE SALARY' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'BASE SALARY'))
team_sals$'SIGN BONUS' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'SIGN BONUS'))
team_sals$'ALL BONUSES' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'ALL BONUSES'))
team_sals$'CAP VALUE' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'CAP VALUE'))
team_sals$'SALARY' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'SALARY'))
team_sals$TEAM <- cbind(team_sals, team)
team_sals$YEAR <- cbind(team_sals, year)
return(rbind(df, team_sals))
}
bill_sals <- download_data("bills","2002")
bill_sals <- data.frame()
bills_sals <- download_data("bills","2002",bills_sals)
str(bills_sals)
bill_sals$TEAM <- cbind(bill_sals, "Bills")
?rep
download_data <- function(team, year, df) {
team_list <- readHTMLTable(sprintf('http://content.usatoday.com/sportsdata/football/nfl/%s/salaries/%s', team, year))
team_sals <- team_list[['team-salaries']]
team_sals <- cbind(lapply(team_sals[1:6], as.character),
team_sals[7], stringsAsFactors = FALSE)
team_sals$'BASE SALARY' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'BASE SALARY'))
team_sals$'SIGN BONUS' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'SIGN BONUS'))
team_sals$'ALL BONUSES' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'ALL BONUSES'))
team_sals$'CAP VALUE' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'CAP VALUE'))
team_sals$'SALARY' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'SALARY'))
team_sals$TEAM <- rep(team, nrows(team_sals))
team_sals$YEAR <- rep(year, nrows(team_sals))
return(rbind(df, team_sals))
}
bill_sals <- data.frame()
bills_sals <- download_data("bills","2002",bills_sals)
download_data <- function(team, year, df) {
team_list <- readHTMLTable(sprintf('http://content.usatoday.com/sportsdata/football/nfl/%s/salaries/%s', team, year))
team_sals <- team_list[['team-salaries']]
team_sals <- cbind(lapply(team_sals[1:6], as.character),
team_sals[7], stringsAsFactors = FALSE)
team_sals$'BASE SALARY' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'BASE SALARY'))
team_sals$'SIGN BONUS' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'SIGN BONUS'))
team_sals$'ALL BONUSES' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'ALL BONUSES'))
team_sals$'CAP VALUE' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'CAP VALUE'))
team_sals$'SALARY' <- as.numeric(gsub("[^[:digit:]]", "", team_sals$'SALARY'))
team_sals$TEAM <- rep(team, nrow(team_sals))
team_sals$YEAR <- rep(year, nrow(team_sals))
return(rbind(df, team_sals))
}
bill_sals <- data.frame()
bills_sals <- download_data("bills","2002",bills_sals)
bill_sals <- data.frame()
bills_sals <- download_data("bills","2002",bills_sals)
bills_sals <- data.frame()
bills_sals <- download_data("bills","2002",bills_sals)
head(bills_sals)
rm(list=ls())
source('~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Summer Bridge Final.R')
?write.csv
write.csv(salary_data, file="salary_data.csv", row.names=FALSE)
write.csv(salary_data, file="salary_data.csv", row.names=FALSE, na="")
library(XML)
first_try <- readHTMLTable('http://www.pro-football-reference.com/teams/buf/')
str(first_try)
first_try <- readHTMLTable('http://www.pro-football-reference.com/teams/buf/', stringAsFactors=FALSE)
str(first_try)
team_index <- first_try[['team_index']]
str(team_index)
str(team_index[1])
team_index[1] <- as.numeric(team_index[1])
str(team_index$Year)
team_index$Year <- as.numeric(team_index$Year)
str(team_index)
summary(team_index$Year)
head(team_index)
wd()
getwd()
setwd("~/Data Science/Summer Bridge")
salary_data <- read.csv("salary_data.csv")
str(salary_data)
str(subset(salary_data, YEAR == "2009-10"))
head(subset(salary_data, YEAR == "2009-10"))
head(subset(salary_data$YEAR, YEAR == "2009-10"))
head(salary_data[salary_data$YEAR == "2009-10"])
head(salary_data[salary_data$YEAR == "2009-10",])
head(salary_data[salary_data$YEAR == "2009-10","YEAR"])
salary_data2 <- salary_data
salary_data2[salary_data2=="2009-10"] <- "2009"
library(plyr)
revalue(salary_data2[,"YEAR"], c("2009-10"="2009"))
salary_data2[,"YEAR"] <- revalue(salary_data2[,"YEAR"], c("2009-10"="2009"))
str(salary_data2)
levels(salary_data2$YEAR)
write.csv(salary_data, file="salary_data.csv", row.names=FALSE, na = "")
write.csv(salary_data2, file="salary_data.csv", row.names=FALSE, na = "")
levels(salary_data2$YEAR)
salaray_data2[417,]
salary_data2[417,]
salary_data2[,YEAR == 2009]
salary_data2[,salaray_data2$YEAR == 2009]
salary_data2[,salaray_data2$"year" == 2009]
salary_data2[,salary_data2$YEAR == 2009]
str(salaray_data2$YEAR)
str(salary_data2$YEAR)
str(salary_data2$YEAR == 2009)
salary_data2 <- revalue(salary_data2[,"YEAR"], c("2009-10"="2009"))
salary_data2 <- revalue(salary_data[,"YEAR"], c("2009-10"="2009"))
salary_data2[418,]
salary_data2[418]
salary_data2 <- salary_data
str(salary_data)
levels(salary_data$year)
levels(salary_data$YEAR)
levels(salary_data2$YEAR)
salary_data2$YEAR <- mapvalues(salary_data2$YEAR, from = "2009-10", to = "2009")
salary_data2[417]
salary_data2[417,]
write.csv(salary_data2, file="salary_data.csv", row.names=FALSE, na = "")
rm(list = ls())
setwd("~/Data Science/Summer Bridge")
setwd("~/Data Science/Summer Bridge/Summer-Bridge-Assignments/Final Project")
ls()
?read.csv
nfl_data <- read.csv('salary_season.csv', stringsAsFactors=FALSE)
str(nfl_data)
summary(nfl_data)
str(nfl_data[,'QB.Cost'])
qb_pct <- nfl_data[,'QB.Cost']/nfl_data[,'TotalCap']
head(qb_pct)
nfl_data <- cbind(nfl_data,qb_pct=qb_pct)
install.packages("ggpolot2")
install.packages("ggplot2")
?sapply
nfl <- nfl_data
total_lbs <- nfl[,'LB.Cost'] + nfl[,'OLB.Cost'] + nfl[,'MLB.Cost']
head(total_lbs)
nfl <- cbind(nfl, tLB.Cost = total_lbs)
View(nfl)
total_d <- nfl[,'tLB.Cost'] + nfl[,'DE.Cost'] + nfl[,'DT.Cost'] + nfl[,'CB.Cost'] + nfl[,'S.Cost']
nfl <- cbind(nfl, tD.Cost = total_d)
dt_pct <- nfl[,'tLB.Cost'] / nfl[,tD.Cost]
dt_pct <- nfl[,'tLB.Cost'] / nfl[,'tD.Cost']
lb_pct <- nfl[,'tLB.Cost'] / nfl[,'tD.Cost']
dt_pct <- nfl[,'DT.Cost'] / nfl[,'tD.Cost']
de_pct <- nfl[,'DE.Cost'] / nfl[,'tD.Cost']
cb_pct <- nfl[,'CB.Cost'] / nfl[,'tD.Cost']
s_pct <- nfl[,'S.Cost'] / nfl[,'tD.Cost']
cbind(nfl, lb_pct, dt_pct, de_pct, cb_pct, s_pct)
nfl <- cbind(nfl, lb_pct, dt_pct, de_pct, cb_pct, s_pct)
def <- subset(nfl, team_name, year)
?subset
def <- subset(nfl,select=c("team_name",
"year",
"Wins",
"Points.Against",
"Def.Rank.Pts",
"Def.Rank.Yds",
"lb_pct",
"dt_pct",
"de_pct",
"cb_pct",
"s_pct")
)
summary(def$'dt_pct')
hist(def$'dt_pct')
hist(def$'de_pct')
hist(def$'lb_pct')
hist(def$'cb_pct')
hist(def$'s_pct')
plot(def$'cb_pct', def$'Wins')
plot(def$'lb_pct', def$'Wins')
plot(def$'dt_pct', def$'Wins')
plot(def$'de_pct', def$'Wins')
plot(def$'Rank.Pts', def$'Wins')
plot(def$'Def.Rank.Pts', def$'Wins')
plot(def$'Def.Rank.Yds', def$'Wins')
plot(def$'Def.Rank.Pts', def$'Wins')
